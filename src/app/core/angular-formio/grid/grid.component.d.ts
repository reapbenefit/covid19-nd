import { EventEmitter, OnInit, AfterViewInit, OnChanges, ViewContainerRef, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { FormioLoader } from '../components/loader/formio.loader';
import { FormioAlerts } from '../components/alerts/formio.alerts';
import { GridHeaderComponent } from './GridHeaderComponent';
import { GridBodyComponent } from './GridBodyComponent';
import { GridFooterComponent } from './GridFooterComponent';
import { FormioPromiseService } from '../formio-promise.service';
export declare class FormioGridComponent implements OnChanges, OnInit, AfterViewInit {
    loader: FormioLoader;
    alerts: FormioAlerts;
    private resolver;
    private ref;
    src?: string;
    items?: Array<any>;
    onForm?: Promise<any>;
    query?: any;
    refresh?: EventEmitter<object>;
    columns?: Array<any>;
    gridType?: string;
    size?: number;
    components?: any;
    formio?: FormioPromiseService;
    createText: String;
    isActionAllowed: any;
    select: EventEmitter<object>;
    rowSelect: EventEmitter<object>;
    rowAction: EventEmitter<object>;
    createItem: EventEmitter<any>;
    error: EventEmitter<any>;
    headerElement: ViewContainerRef;
    bodyElement: ViewContainerRef;
    footerElement: ViewContainerRef;
    page: number;
    isLoading: boolean;
    initialized: boolean;
    header: GridHeaderComponent;
    body: GridBodyComponent;
    footer: GridFooterComponent;
    constructor(loader: FormioLoader, alerts: FormioAlerts, resolver: ComponentFactoryResolver, ref: ChangeDetectorRef);
    createComponent(property: any, component: any): any;
    loadGrid(src?: string): void;
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngAfterViewInit(): void;
    set loading(_loading: boolean);
    actionAllowed(action: any): any;
    onError(error: any): void;
    refreshGrid(query?: any): void;
    setPage(num?: number): void;
    sortColumn(header: any): void;
    pageChanged(page: any): void;
}
